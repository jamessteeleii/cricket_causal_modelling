))|>
# Create column with labels for plot
mutate(label = case_when(
is.na(status) == TRUE ~ adjusted,
.default = status
)) |>
ggplot(aes(x=x, y=y, xend=xend, yend=yend, color=label)) +
geom_dag_point() +
geom_dag_edges_diagonal(edge_alpha = 0.5) +
geom_dag_label(size = 2.5, show.legend = FALSE) +
scale_color_manual(breaks = c("adjusted", "exposure", "outcome", "unadjusted"),
values = c("#D55E00", "#009E73", "#56B4E9", NA)) +
theme_dag()
# What is the effect of batting in the first innings compared to the second innings on total runs? ----
dag |>
tidy_dagitty(layout = "time_ordered") |>
# Adds adjustment sets
dag_adjustment_sets() |>
# Select the adjustment set (note, set exposures/outcome on dagitty and select)
filter(set == "{Opposition}") |>
# Adds node status (i.e., exposures/outcome and minimal adjustment from adjustment set)
node_status() |>
# Add any additional adjusted variables
mutate(status = case_when(
(name == "Match" | "Team") ~ adjusted,
.default = status
)) |>
# Create column with labels for plot
mutate(label = case_when(
is.na(status) == TRUE ~ adjusted,
.default = status
)) |>
ggplot(aes(x=x, y=y, xend=xend, yend=yend, color=label)) +
geom_dag_point() +
geom_dag_edges_diagonal(edge_alpha = 0.5) +
geom_dag_label(size = 2.5, show.legend = FALSE) +
scale_color_manual(breaks = c("adjusted", "exposure", "outcome", "unadjusted"),
values = c("#D55E00", "#009E73", "#56B4E9", NA)) +
theme_dag()
# What is the effect of batting in the first innings compared to the second innings on total runs? ----
dag |>
tidy_dagitty(layout = "time_ordered") |>
# Adds adjustment sets
dag_adjustment_sets() |>
# Select the adjustment set (note, set exposures/outcome on dagitty and select)
filter(set == "{Opposition}") |>
# Adds node status (i.e., exposures/outcome and minimal adjustment from adjustment set)
node_status() |>
# Add any additional adjusted variables
mutate(status = case_when(
(name == "Match" & "Team") ~ adjusted,
.default = status
)) |>
# Create column with labels for plot
mutate(label = case_when(
is.na(status) == TRUE ~ adjusted,
.default = status
)) |>
ggplot(aes(x=x, y=y, xend=xend, yend=yend, color=label)) +
geom_dag_point() +
geom_dag_edges_diagonal(edge_alpha = 0.5) +
geom_dag_label(size = 2.5, show.legend = FALSE) +
scale_color_manual(breaks = c("adjusted", "exposure", "outcome", "unadjusted"),
values = c("#D55E00", "#009E73", "#56B4E9", NA)) +
theme_dag()
# What is the effect of batting in the first innings compared to the second innings on total runs? ----
dag |>
tidy_dagitty(layout = "time_ordered") |>
# Adds adjustment sets
dag_adjustment_sets() |>
# Select the adjustment set (note, set exposures/outcome on dagitty and select)
filter(set == "{Opposition}") |>
# Adds node status (i.e., exposures/outcome and minimal adjustment from adjustment set)
node_status() |>
# Add any additional adjusted variables
mutate(status = case_when(
(name == "Match" & "Team") ~ "adjusted",
.default = status
)) |>
# Create column with labels for plot
mutate(label = case_when(
is.na(status) == TRUE ~ adjusted,
.default = status
)) |>
ggplot(aes(x=x, y=y, xend=xend, yend=yend, color=label)) +
geom_dag_point() +
geom_dag_edges_diagonal(edge_alpha = 0.5) +
geom_dag_label(size = 2.5, show.legend = FALSE) +
scale_color_manual(breaks = c("adjusted", "exposure", "outcome", "unadjusted"),
values = c("#D55E00", "#009E73", "#56B4E9", NA)) +
theme_dag()
# What is the effect of batting in the first innings compared to the second innings on total runs? ----
dag |>
tidy_dagitty(layout = "time_ordered") |>
# Adds adjustment sets
dag_adjustment_sets() |>
# Select the adjustment set (note, set exposures/outcome on dagitty and select)
filter(set == "{Opposition}") |>
# Adds node status (i.e., exposures/outcome and minimal adjustment from adjustment set)
node_status() |>
# Add any additional adjusted variables
mutate(status = case_when(
(name == "Match" | name == "Team") ~ "adjusted",
.default = status
)) |>
# Create column with labels for plot
mutate(label = case_when(
is.na(status) == TRUE ~ adjusted,
.default = status
)) |>
ggplot(aes(x=x, y=y, xend=xend, yend=yend, color=label)) +
geom_dag_point() +
geom_dag_edges_diagonal(edge_alpha = 0.5) +
geom_dag_label(size = 2.5, show.legend = FALSE) +
scale_color_manual(breaks = c("adjusted", "exposure", "outcome", "unadjusted"),
values = c("#D55E00", "#009E73", "#56B4E9", NA)) +
theme_dag()
targets::tar_make()
targets::tar_load(innings_runs_dag_plot)
innings_runs_dag_plot
targets::tar_load(total_scores)
View(total_scores)
head(total_scores)
total_scores |>
pivot_longer(batting_team:bowling_team,
names_to = "bowling",
values_to = "team")
total_scores |>
pivot_longer(batting_team:bowling_team,
names_to = "bowling",
values_to = "team")
?pivot_longer
total_scores |>
pivot_longer(batting_team,
names_to = "bowling",
values_to = "team")
total_scores |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team")
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
)
total_scores
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
)
View(total_scores)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
)
View(first_innings_sample)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
group_by(match_id) |>
arrange(innings) |>
mutate(
total_runs_a = total_runs,
total_runs_b = case_when(
innings == 1 ~ lead(total_runs),
.default = total_runs
)
)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
group_by(match_id) |>
arrange(innings) |>
mutate(
total_runs_a = total_runs,
total_runs_b = case_when(
innings == 1 ~ lead(total_runs),
.default = total_runs
)
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id) |>
arrange(innings) |>
mutate(
total_runs_a = total_runs,
total_runs_b = case_when(
innings == 1 ~ lead(total_runs),
.default = total_runs
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id) |>
arrange(innings) |>
mutate(
total_runs_a = total_runs,
total_runs_b = case_when(
innings == 1 ~ lead(total_runs),
.default = total_runs
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(c(batting_team:bowling_team, total_runs)
names_to = "batting",
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(c(batting_team:bowling_team, total_runs)
names_to = "batting",
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team")
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs_batting = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
)
total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
) |>
select(match_id, innings, team, opposition, total_wickets_lost, total_overs_faced, total_runs, winning_team, toss_winner, DLS) |>
filter(innings == 1) |>
ungroup() |>
slice_sample(prop = 0.1)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
) |>
select(match_id, innings, team, opposition, total_wickets_lost, total_overs_faced, total_runs, winning_team, toss_winner, DLS) |>
filter(innings == 1) |>
ungroup() |>
slice_sample(prop = 0.1)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
) |>
select(match_id, innings, team, opposition, total_wickets_lost, total_overs_faced, total_runs, winning_team, toss_winner, DLS)
first_innings_sample <- total_scores |>
mutate(
team_a = batting_team,
team_b = bowling_team
) |>
pivot_longer(batting_team:bowling_team,
names_to = "batting",
values_to = "team") |>
mutate(
opposition = case_when(
team == team_a ~ team_b,
team == team_b ~ team_a
),
batting = case_when(
batting == "batting_team" ~ 1,
.default = 0
)
) |>
group_by(match_id, team) |>
arrange(innings) |>
mutate(
total_runs = case_when(
batting == 0 ~ lead(total_runs),
.default = total_runs
)
) |>
select(match_id, innings, team, batting, opposition, total_wickets_lost, total_overs_faced, total_runs, winning_team, toss_winner, DLS)
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_load(innings_runs_sample_model)
innings_runs_sample_model
sjPlot::plot_model(innings_runs_sample_model, type = "pred")
targets::tar_make()
targets::tar_load(innings_runs_sample_model)
sjPlot::plot_model(innings_runs_sample_model, type = "pred")
sjPlot::plot_model(innings_runs_sample_model, type = "pred", bias_correction = TRUE)
innings_runs_sample_model
install.packages("marginaleffects")
marginaleffects::avg_comparisons(innings_runs_sample_model)
marginaleffects::plot_comparisons(innings_runs_sample_model)
marginaleffects::plot_comparisons(innings_runs_sample_model, condition = "batting")
marginaleffects::plot_comparisons(innings_runs_sample_model, variables = "batting")
marginaleffects::plot_comparisons(innings_runs_sample_model, by = "batting")
